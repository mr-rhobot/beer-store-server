{
  "name": "brewerydb-node",
  "version": "0.0.1",
  "description": "A wrapper for Brewerydb's REST api",
  "main": "index.js",
  "scripts": {
    "test": "mocha --recursive"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ronandi/brewerydb-node.git"
  },
  "author": {
    "name": "ronandi"
  },
  "license": "MIT",
  "dependencies": {
    "request": "~2.16.6",
    "querystring": "~0.2.0"
  },
  "devDependencies": {
    "should": "~1.2.2",
    "mocha": "~1.9.0",
    "rewire": "~1.1.2",
    "sinon": "~1.6.0"
  },
  "keywords": [
    "brewery",
    "brewerydb",
    "beer",
    "api",
    "wrapper"
  ],
  "readme": "brewerydb-node\n================\n##Status##\nOnly very recently published: should be considered **alpha**!     \nThis is somewhat tested, and somewhat finished. It does not completely wrap BreweryDB’s \nREST api (notably all POST/edit actions on the db are unimplemented), but it does what I need it to do right now - get data from the db. I based my interface off the one [Tyler Hunt made his wrapper written in Ruby](https://github.com/tylerhunt/brewery_db). \n \n##Installation##\nYou should install this library with npm:    \n   \n\tnpm install brewerydb-node\n##Documentation##\n###How to use###\n\tvar BreweryDb = require('brewerydb-node');\n\tvar brewdb = new BreweryDb('your-key-here');\n\nCallbacks should should take two arguments, err, and data, as per convention\n\t\n###Endpoints###\n####Beer####\n**beer.getById**(id/Array of ids, params (see options in BreweryDb Api docs),\ncallback)        \n\n\t// /beer/:beerId\n\tbrewdb.beer.getById(\"avMkil\", {}, callback);      \n\n\t// /beers?ids=\n\tbrewdb.beer.getById([\"avMkil\", \"XcvLTe\"], { withBreweries: \"Y\" }, callback);     \n\n\t// /beers?name=“bock”&abv=....\n\t// can provide params that beers endpoint accepts (like abv, ibu, etc.)\n\tbrewdb.beer.find({ name:\"bock\" }, callback)\n\t\n####Brewery####\n\tbrewdb.breweries.getById(\"g0jHqt\", {}, callback);\n\tbrewdb.breweries.getById([\"g0jHqt\", {}, \"MWi5Kp\"], callback)\n\tbrewdb.breweries.find( { established: 2010 }, callback)\n\t\n####Search####\n\tbrewdb.search.all( { q: \"coors\" }, callback);\n\tbrewdb.search.beers({ q: \"dogfish\" }, callback);\n\tbrewdb.search.breweries({ q: \"dogfish\" }, callback);\t\n\t\n####Category####\n\tbrewdb.category.all(callback);\n\tbrewdb.category.getById(1, callback);\n\t\n####Style####\n\tbrewdb.style.all(callback);\n\tbrewdb.style.getById(1,callback)\n\n##Todo##\n1. Write better tests?\n2. Implement glassware\n3. Write better docs\n",
  "_id": "brewerydb-node@0.0.1",
  "dist": {
    "shasum": "26bf71d13dfa71482451e28dd434717bb0f76ac5",
    "tarball": "https://registry.npmjs.org/brewerydb-node/-/brewerydb-node-0.0.1.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "ronandi",
    "email": "rohit.pyropaintball@gmail.com"
  },
  "maintainers": [
    {
      "name": "ronandi",
      "email": "rohit.pyropaintball@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "26bf71d13dfa71482451e28dd434717bb0f76ac5",
  "_resolved": "https://registry.npmjs.org/brewerydb-node/-/brewerydb-node-0.0.1.tgz",
  "_from": "brewerydb-node@",
  "bugs": {
    "url": "https://github.com/ronandi/brewerydb-node/issues"
  },
  "homepage": "https://github.com/ronandi/brewerydb-node#readme"
}
